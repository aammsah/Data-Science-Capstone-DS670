train <- read.csv('train.csv', header = T)
test <- read.csv('test.csv', header = TRUE)
target<- read.csv('gender_submission.csv', header = TRUE)
str(train)
table(train$Survived)
prop.table(table(train$Survived))

measurePrecisionRecall <- function(predict, actual_labels){
  precision <- sum(predict & actual_labels) / sum(predict)
  recall <- sum(predict & actual_labels) / sum(actual_labels)
  fmeasure <- 2 * precision * recall / (precision + recall)
  
  cat('precision:  ')
  cat(precision * 100)
  cat('%')
  cat('\n')
  
  cat('recall:     ')
  cat(recall * 100)
  cat('%')
  cat('\n')
  
  cat('f-measure:  ')
  cat(fmeasure * 100)
  cat('%')
  cat('\n')
}

install.packages('rattle')
install.packages('rpart.plot')
install.packages('RColorBrewer')
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(SDMTools)
library(ROCR)


fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked,
             data=train,
             method="class")
plot(fit)
text(fit)




fancyRpartPlot(fit)

prediction<- predict(fit, test, type = "class")


confusion.matrix(prediction, target[[2]])


measurePrecisionRecall(as.numeric(as.character(prediction)), target[[2]])

library(randomForest)
set.seed(419)
fit2<- randomForest(as.factor(Survived) ~ Pclass +Sex + SibSp + Parch + Embarked ,
                    data = train, importance = TRUE, ntree = 2000)
varImpPlot(fit2)
test2<- cbind.data.frame(test$Pclass, test$Sex, test$SibSp, test$Parch,  test$Embarked)
names(test2)<-c('Pclass', 'Sex', 'SibSp', 'Parch','Embarked')
levels(test2$Embarked)<- levels(train$Embarked)
pred2<-predict(fit2, test2)
confusion.matrix(pred2, target[[2]])
measurePrecisionRecall(as.numeric(as.character(pred2)), target[[2]])

sum(is.na(test2$Fare))
test2
